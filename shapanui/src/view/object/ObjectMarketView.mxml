<?xml version="1.0" encoding="utf-8"?>
<mx:Box xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
	creationComplete="init();"
	>
	<mx:Style source="../../style/main.css"/>
	<mx:Script>
		<![CDATA[
			import view.selWin.IconLabel;
			import mx.managers.PopUpManager;
			import view.selWin.ObjectAddWindow;
			import com.AppShareObj;
			import com.ResultFilter;
			import mx.containers.Panel;
			import mx.containers.ApplicationControlBar;
			import view.fk.FKTextInput;
			import adobe.utils.XMLUI;
			import mx.events.IndexChangedEvent;
			import mx.messaging.management.Attribute;
			import component.FileUpload;
			import mx.controls.DateField;
			import view.list.ListView;
			import mx.core.Application;
			import mx.controls.TextInput;
			import com.pioneer.http.UrlService;
			import mx.managers.SystemManager;
			import mx.utils.XMLUtil;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
		
			import mx.rpc.http.mxml.HTTPService;
			
			private var keyVal:String=null;
			private var tblName:String=null;
			private var panelBuild:ObjectPanal=null;
			private var objdoc:XML=null;//访问的数据，描述文件。
			private var newDoc:XML=null;//添加对象的doc；
			private var listview:ListView=null;
			private var comp:String="com";//显示数据所属得模块。
			private var dataEnable:Boolean=false;
			private var labelWidth:int=80;
			
			private var mainBox:Box=null;
			private var ptitle:String="详细信息";
			private var detailpanel:Box=null;
			private var condition:String=null;
			//////////////////visible /////////////////
			
			private var menuBarVisible:Boolean=true;
			private var addBtnVisible:Boolean=true;
			
			private var addfun:Boolean=true;
			private var editfun:Boolean=true;
			private var delfun:Boolean=true;
			private var areaHeight:int=0;
			
			private var focusdoc:XML=null;
			private var isFocus:Boolean=true;
			private var hiddenLs:Array=null;
			
			public function setHiddenLs(hiddenLs:Array):void{
				this.hiddenLs=hiddenLs;
			}
			public function setAreaHeight(areaHeight:int):void{
				this.areaHeight=areaHeight;
			}
			public function setAddfun(flg:Boolean):void{
				this.addfun=flg;
			}
			public function setEditfun(flg:Boolean):void{
				this.editfun=flg;
			}
			public function setDelfun(flg:Boolean):void{
				this.delfun=flg;
			}
			private function init():void{
				try{
					 mainBox=Box(this.getChildByName("mainP"));
					 var mainp:Panel=Panel(mainBox.getChildByName("panelp"));
					 if(null!=mainp){
					 	//mainp.title=this.ptitle;
					 	detailpanel=Box(mainp.getChildByName("detailpanel"));
					 }
					 
					 
					var menubar:ApplicationControlBar=ApplicationControlBar(this.getObjByName("menubar",mainBox));
					
					menubar.visible=this.menuBarVisible;
					if(this.menuBarVisible){
						menubar.height=39;	
						menubar.percentWidth=100;					
					}else{
						menubar.height=0;
						menubar.width=0;
					}
				 	this.dataEnable=true;
				 	this.addbtn_id.enabled=this.addfun;
				 	this.editbtn_id.enabled=this.editfun;
				 	this.delbtn_id.enabled=this.delfun;
				 	if(null!=this.keyVal)
				 		this.gateData();
				 	else if(null!=this.condition){
				 		this.getDataByCondition();
				 	}
				 	
				 	///////////////快捷菜单//////////////////
				 	if(this.isFocus){
				 		var menu:ContextMenu = new ContextMenu();
				 		var tomyFolder:ContextMenuItem =new ContextMenuItem('加入关注');
			            tomyFolder.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
		              		addFolder();
			            });
			            menu.customItems.push(tomyFolder);
			            this.contextMenu=menu;
				 	}
				 	
				}catch(e:Error){
					Alert.show(e.getStackTrace());
				}
				 
			}
			private function addFolder():void{
				 var row:XML=this.objdoc.TABLEDATA.ROWDATA.ROW[0];
				 if(null!=row){
				 	var dvalue:Array=new Array();
				
					var objx:Object=new Object();
					objx.NAME="NAME";
					objx.VALUE=row.@NAME;
					dvalue.push(objx);
					
					var objy:Object=new Object();
					objy.NAME="PHYSICAL_NAME";
					objy.VALUE=this.objdoc.@TABLE;
					dvalue.push(objy);
					
					var objid:Object=new Object();
					objid.NAME="PHYSICAL_ID";
					objid.VALUE=row.@ID;
					dvalue.push(objid);
					var imgv:Object=new Object();
					imgv.NAME="ICON";
					imgv.VALUE=row.@ICON;
					dvalue.push(imgv);
					var doc:XML=AppShareObj.getUserDoc();
					var uName:Object=new Object();
					uName.NAME="CREATE_NAME";
					uName.VALUE=doc.@NAME;
					dvalue.push(uName);
					
					var selWin:ObjectAddWindow=ObjectAddWindow(PopUpManager.createPopUp(this, ObjectAddWindow, true));
					
					selWin.setDefaultValues(dvalue);
					selWin.showCloseButton=true;
					selWin.setCondition("地理对象存储",null);
					selWin.x=(Application.application.screen.width-selWin.width)/2;
	                selWin.y=(Application.application.screen.height-selWin.height)/2;
				 }
			}
			
			
			public function setComp(comp:String):void{
				this.comp=comp;
			}
			public function setListView(view:ListView):void{
				this.listview=view;
			}
			
			
			public function setCondition(tblName:String,condition:String):void{
				
				this.tblName=tblName;
				this.condition=condition;
				try{
					if(this.dataEnable){
						getDataByCondition();
					}
					
				}catch(e:Error){
//					系统取数据错误，请与系统维护人员联系！
					Alert.show("系统取数据错误，请与系统维护人员联系！"+e.message);
				}
			}
			//设置查找学习的表，关键字
			public function setMeta(keyVal:String,tblName:String):void{
				this.keyVal=keyVal;
				
				this.tblName=tblName;
				//Alert.show("setMeta");
				try{
					if(this.dataEnable){
						gateData();
					}
				}catch(e:Error){
//					系统取数据错误，请与系统维护人员联系！
					Alert.show("系统取数据错误，请与系统维护人员联系！"+e.message);
				}
			}
			
			
			
			private function getDataByCondition():void{
				
				var tmpxml:XML=XML(detailReq);
				tmpxml.@TABLE=this.tblName;
				tmpxml.@ID=this.keyVal;
				tmpxml.@WHERE=this.condition;
				
				var tmplService:HTTPService = new HTTPService();
				//tmplService.url = "mode/data/detaildoc.xml";
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onXMLResult);
				tmplService.send(tmpxml);
			}
//			组织请求文档，发送明细请求
			private function gateData():void{
				var tmpxml:XML=XML(detailReq);
				tmpxml.@TABLE=this.tblName;
				tmpxml.@ID=this.keyVal;
				
				
				var tmplService:HTTPService = new HTTPService();
				//tmplService.url = "mode/data/detaildoc.xml";
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onXMLResult);
				tmplService.send(tmpxml);
			}

			
			// 明细请求成功！
			protected function onXMLResult(e:ResultEvent):void{
				try{
					var tmpdoc:XML=XML(e.result);
					//如果没有记录，加一条空记录，用于显示
					
					var rows:XMLList=tmpdoc.TABLEDATA.ROWDATA.ROW;
					if(rows.length()<1){
						var rowsElt:XML=tmpdoc.TABLEDATA.ROWDATA[0];
						rowsElt.appendChild(<ROW/>);
						this.keyVal=null;
					}
					//
					objdoc=tmpdoc;
					
					if(null!=this.hiddenLs){
						
						for each(var obj:String in this.hiddenLs){
							var elt:XML=tmpdoc.METADATA.TABLE.FIELD.(@NAME == obj)[0];
							if(null!=elt){
								elt.@DP='0';
								//Alert.show("set dp =0");
							}
						}
					}
					buildShowPage(tmpdoc);
				}catch(e:Error){
					Alert.show("onXMLResult:::\r\n"+e.getStackTrace());
				}
				
			}
			 private function onFaultHttpService(e:FaultEvent):void
			{
				Alert.show("网络连接错误！");
			} 
//			设置这样渲染方法。
			public function setShowClass(panelBuild:ObjectPanal):void{
				this.panelBuild=panelBuild;
			}
//			组织显示数据。
			private function buildShowPage(doc:XML):void{
				try{
					
					if(doc){
						if(null==this.keyVal){
							this.editbtn_id.enabled=this.delfun;
							this.delbtn_id.enabled=this.delfun;
							
						}else{
							this.editbtn_id.enabled=this.editfun;
							this.delbtn_id.enabled=this.delfun;
						}
						if(null==this.panelBuild){
							this.panelBuild=new ObjectPanal();
						}
						this.panelBuild.setComp(comp);
						this.panelBuild.setDoc(doc);
						this.panelBuild.setLabelWidth(this.labelWidth);
						this.panelBuild.setAreaHeight(this.areaHeight);
						var row:XML=this.getDetailById(doc);
						var mate=this.getMeta(doc);
						//遍历要显示的字段
						if(null==this.keyVal){
							row=doc.TABLEDATA.ROWDATA.ROW[0];
						}
						for each( var col:XML in mate){
								var val='';
								try{
									
									panelBuild.addField2Array(col,row);
								}catch(e:Error){
									
								}
						}
						
						detailpanel.removeAllChildren();
	//					panelBuild.getPanel() 是返回渲染方法的结果。
						if(null!=this.keyVal){
							detailpanel.addChild(panelBuild.getDetailPanel());
							
						}else if(null!=this.condition){
							detailpanel.addChild(panelBuild.getDetailPanel());
							
						}else{
	//						detailpanel.addChild(panelBuild.getDetailPanel());
						}
						
						//System.setClipboard("this is a flash copy.");
						//btns.visible=true;
					}
				}catch(e:Error){
					Alert.show(e.getStackTrace());
				}
				
			}
			
			private function rebuildShowPage(doc:XML):void{
				if(doc){
					if(null==this.panelBuild){
						this.panelBuild=new ObjectPanal();
					}
					this.panelBuild.clear();
					this.panelBuild.setComp(comp);
					this.panelBuild.setDoc(doc);
					var row:XML=this.getDetailById(doc);
					var mate=this.getMeta(doc);
					//遍历要显示的字段
					for each( var col:XML in mate){
							var val='';
							try{
								val=XMLUtil.getAttributeByQName(row,new QName(col.@NAME));	
							}catch(e){
								
							}
							panelBuild.addField2Array(col,row);
						
					}
					detailpanel.removeAllChildren();
					detailpanel.addChild(panelBuild.getDetailPanel());
					//btns.visible=true;
				}
			}
			private function getMeta(doc:XML):XMLList{
				var mate:XMLList=doc.METADATA.TABLE.FIELD;
				return mate;
			}
			//根据id取信息
			private function getDetailById(doc:XML):XML{
				if(null!=doc){
					var rt:XML=null;
					try{
						var key:String=this.objdoc.METADATA.TABLE.KEYS.KEY.@NAME;
						var datarows:XMLList=doc.TABLEDATA.ROWDATA.ROW;
						//for each(var col:XML in mcrows){
						for each( var data:XML in datarows){
							if(null!=this.keyVal){
								if( data.@[key]==this.keyVal){
									rt=data;
									break;
								}
							}else{
								rt= data;
								break;
							}
							
						}
					}catch(e:Error){
												
					}
				}
				return rt;
			}
			private function newAction():void{
				
				if("新增"==addbtn_id.label){
					addbtn_id.label="保存";
					editbtn_id.enabled=false;
					delbtn_id.label="放弃";
					detailpanel.removeAllChildren();
					detailpanel.addChild(panelBuild.getAddPanel());
					this.dataEnable=false;
					this.delbtn_id.enabled=true;
				}else{
					saveNewFun();
					addbtn_id.label="新增";
					editbtn_id.enabled=this.editfun;
					delbtn_id.enabled=this.delfun;
					delbtn_id.label="删除";
					this.dataEnable=true;
				}
			}
			private function editAction():void{
				if("编辑"==editbtn_id.label){
					this.panelBuild.createEditDoc();
					editbtn_id.label="保存";
					addbtn_id.enabled=this.addfun;
					delbtn_id.label="放弃";
					delbtn_id.enabled=true;
					detailpanel.removeAllChildren();
					detailpanel.addChild(panelBuild.getEditPanel());
					this.dataEnable=false;
				}else{
					
					saveEditFun();
					editbtn_id.label="编辑";
					addbtn_id.enabled=this.addfun;
					//detailbtn_id.enabled=true;
					delbtn_id.enabled=this.delfun;
					delbtn_id.label="删除";
					this.dataEnable=true;
					detailpanel.removeAllChildren();
//					panelBuild.getPanel() 是返回渲染方法的结果。
					detailpanel.addChild(panelBuild.getDetailPanel());
				}
				
			}
			private function detailAction():void{
					detailpanel.removeAllChildren();
//					panelBuild.getPanel() 是返回渲染方法的结果。
					detailpanel.addChild(panelBuild.getDetailPanel());
			}
			private function delAction():void{
				if(delbtn_id.label=="放弃"){
					addbtn_id.label="新增";
					editbtn_id.label="编辑";
					addbtn_id.enabled=this.addfun;
					editbtn_id.enabled=this.editfun;
					//detailbtn_id.enabled=true;
					delbtn_id.enabled=this.delfun;
					this.dataEnable=true;
					delbtn_id.label="删除";
					detailpanel.removeAllChildren();
//					panelBuild.getPanel() 是返回渲染方法的结果。
					if(null==this.keyVal){
						detailpanel.removeAllChildren();
						this.delbtn_id.enabled=this.delfun;
						this.editbtn_id.enabled=this.editfun;
					}else{
						detailpanel.addChild(panelBuild.getDetailPanel());
					}
					
				}else{
					delFunction();
				}
			}
			private function delFunction():void{
				var oldRow:XML=this.objdoc.TABLEDATA.ROWDATA.ROW[0];
				var key:String=this.objdoc.METADATA.TABLE.KEYS.KEY.@NAME;
				var delDoc:XML=this.objdoc.copy();
				//delete delDoc..TABLEDATA.ROWDATA.ROW[0];
				delDoc.@["ACTION"]="del";
				delDoc.@["ID"]=oldRow.@[key];
				delDoc.@TABLE=this.tblName;
				delDoc.@["KEYNAME"]=key;
				delDoc.@["COMNAME"]=this.comp;
				var keyVal:String=oldRow.@[key];
				
				
				var tmplService:HTTPService = new HTTPService();
					tmplService.url = UrlService.getCDSActionUrl();
					tmplService.contentType="application/xml";     
					tmplService.method="POST";
					tmplService.resultFormat = "e4x";
					tmplService.showBusyCursor=true;
					tmplService.addEventListener(FaultEvent.FAULT, onDelFaultHttpService);
					tmplService.addEventListener(ResultEvent.RESULT, onXMLDelResult);
					tmplService.send(delDoc);
			}
			private function onDelFaultHttpService(e:FaultEvent):void{
				Alert.show("删除失败。");
			}
			
			private function onXMLDelResult(e:ResultEvent):void{
				var rtdoc:XML=XML(e.result);
				var idstr=rtdoc.@ID;
				if("-1"!=idstr){
//					processEditInfo();
					//rebuildShowPage(this.objdoc);
					if(null!=this.listview){
						this.listview.delRow(idstr);
					}else{
						
					}
					gateData();
					Alert.show("成功删除！");
				}else{
					Alert.show("系统删除失败！");
				}
			}
			//修改结果的保存。
			private function saveEditFun():void{
				var doc:XML=this.panelBuild.getEditDoc();
				if("1"!=doc.@flg){
					return;
					
				}
				
				if(null!=doc){
					doc.@["ACTION"]="edit";
					var tmplService:HTTPService = new HTTPService();
					tmplService.url = UrlService.getCDSActionUrl();
					tmplService.contentType="application/xml";     
					tmplService.method="POST";
					tmplService.resultFormat = "e4x";
					tmplService.showBusyCursor=true;
					tmplService.addEventListener(FaultEvent.FAULT, onEditFaultHttpService);
					tmplService.addEventListener(ResultEvent.RESULT, onXMLEditResult);
					tmplService.send(doc);
				}
			}
			private function onEditFaultHttpService(e:FaultEvent):void{
				Alert.show("修改结果保存失败。");
			}
			
			private function onXMLEditResult(e:ResultEvent):void{
				var rtdoc:XML=XML(e.result);
				var idstr=rtdoc.@ID;
				if("-1"!=idstr){
					//保存后刷新表的标记。
					
					processEditInfo();
					freshObjIcon();
					rebuildShowPage(this.objdoc);
					if(null!=this.listview)
						this.listview.editRow(this.objdoc.TABLEDATA.ROWDATA.ROW[0]);
					Alert.show("更新成功！");
				}else{
					Alert.show("系统更新失败！");
				}
				
			}
			private function freshObjIcon():void{
				var doc:XML=<DATAPACKETS/>;
				doc.@ACTION="freshObjIcon";
				var row:XML=this.objdoc.TABLEDATA.ROWDATA.ROW[0];
				doc.@OBJECT=row.@OBJECT;
				doc.@COMPANY=row.@COMPANY;
				doc.@ICON=row.@ICON;
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getShapanCDSURL();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onEditFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onXMLfreshResult);
				tmplService.send(doc);
			}
			private function onXMLfreshResult(e:ResultEvent):void{
				var rtdoc:XML=XML(e.result);
			}
			private function processEditInfo():void{
				try{
					var doc:XML=this.panelBuild.getEditDoc();
					var newRow:XML=doc.TABLEDATA.ROWDATA.ROW[0];
					var key:String=doc.METADATA.TABLE.KEYS.KEY.@NAME;
					var oldRow:XML=this.objdoc.TABLEDATA.ROWDATA.ROW[0];
					var metas=this.objdoc.METADATA.TABLE.FIELD;
					var attr=null;
					for(var i:int;i<metas.length();i++){
						var meta:XML=XML(metas[i]);
						var name=meta.@NAME;
						var ISFK:String=meta.@ISFK;
						var newval:String=newRow.@[name];
						
						if(null!=newval && ""!=newval){
							if(name==key)continue;
							if("1"==ISFK){
								oldRow.@[name+"_NAME"]=newRow.@[name+"_NAME"];
							}
							oldRow.@[name]=newval;
						}
						
					}
				}catch(e:Error){
					Alert.show("processEditInfo="+e.message);
				}
				
			}
			
			//新添加的是总体遍历取值。
			private function saveNewFun():void{
				
				newDoc=objdoc.copy();
				var metas=newDoc.METADATA.TABLE.FIELD;
				var key:String=newDoc.METADATA.TABLE.KEYS.KEY.@NAME;
				var rows:XMLList=newDoc.TABLEDATA.ROWDATA.ROW;
				var row:XML=null;
				if(rows.length()>0){
					row=rows[0];
				}
				//去掉key值
				row.@[key]='';
				//根据属性收集数据，用于提交
				for(var i:int;i<metas.length();i++){
					var meta:XML=XML(metas[i]);
					var name=meta.@NAME;
					var type=meta.@TYPE;
					var ISFK:String=meta.@ISFK;
					var isEditStr:String=meta.@ISEDIT;
					var obj:Object=getObjByName(name,detailpanel);
					
					
					if(null!=obj){
						var val='';
						 if("1"==ISFK && "ICON"!=name){
							var fkinput:FKTextInput=FKTextInput(obj);
							val=fkinput.code;
							row.@[name+"_NAME"]=fkinput.name;
							
						}else if(name=="ICON"){
							var iconl:IconLabel=IconLabel(obj);
							val=iconl.getText();
						}else if(type=="int"){
							var textipt:TextInput=TextInput(obj);
							val=textipt.text;
						}else if(type=="varchar"){
							var textipt:TextInput=TextInput(obj);
							val=textipt.text;
						}else if(type=="float"){
							var textipt:TextInput=TextInput(obj);
							val=textipt.text;
						}else if(type=="double"){
							var textipt:TextInput=TextInput(obj);
							val=textipt.text;
						}else if(type=="date"){
							var dateinput:DateField=DateField(obj);
							val=dateinput.text;
						}else if("file"==type || "image"==type){
							var file:FileUpload=FileUpload(obj);
							val=file.text;
						}else{
							
						}
						row.@[name]=val;
					}
					
				}
				AddremoteRequest(newDoc);
			}
			
			private function AddremoteRequest(doc:XML):void{
				doc.@["ACTION"]="add";
				var tmplService:HTTPService = new HTTPService();
				//tmplService.url = "mode/data/detaildoc.xml";
				tmplService.url = UrlService.getCDSActionUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onAddFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onXMLAddResult);
				tmplService.send(doc);
			}
			//添加失败！
			private function onAddFaultHttpService(e:FaultEvent):void
			{
				Alert.show("新建信息出错！");
			}
			
			// 添加成功！
			protected function onXMLAddResult(e:ResultEvent):void{
				var key:String=newDoc.METADATA.TABLE.KEYS.KEY.@NAME;
				var tmpdoc:XML=XML(e.result);
				var idStr=tmpdoc.@ID;
				if("-1"!=idStr){
					
					var rows= newDoc.TABLEDATA.ROWDATA.ROW;
					var row:XML=rows[0];
					row.@[key]=idStr;
					if(null!=this.listview){
						this.listview.addRow(row);
					}
					if(null==this.keyVal){
						this.objdoc=newDoc;
					}
				}else{
					Alert.show("保存失败！");
				}
				this.keyVal=idStr;
				//rebuildShowPage(newDoc);
				detailpanel.removeAllChildren();
				this.panelBuild.clear();
				this.gateData();
			}
			
			
			private function saveDelFun():void{
				
			}
			private function remoteRequest():void{
				
			}
			
			private function getObjByName(name:String,box:Box):Object{
				
				var child=box.getChildByName(name);
				
				if(null!=child){
					return child;
					
				}else{
					var childs:Array=box.getChildren();
					if(childs.length>0){
						for(var i:int;i<childs.length;i++){
							var ch:Object=childs[i];
							try{
								var mybox=Box(ch)
								child=getObjByName(name,mybox);
								if(null!=child)return child;
							}catch(e){
								continue;
							}
							
						}
					}
				}
				return null;
			}
			
			public function setTitle(title:String):void{
				this.ptitle=title;
				
			}
			public function setMenuBarVisible(flg:Boolean):void{
				this.menuBarVisible=flg;
				
			}
			public function setLabelWidth(width:int):void{
				this.labelWidth=width;
			}
			public function setAddBtnVisible(flg:Boolean):void{
				this.addBtnVisible=flg;
			}
			
			
		]]>
	</mx:Script>
	<mx:XML id="detailReq" format="e4x">
        <DATAPACKET ACTION="detail">
            
        </DATAPACKET >
    </mx:XML>
    
	<mx:Box width="100%" height="100%" verticalGap="0" name="mainP">
		<mx:ApplicationControlBar name="menubar" width="100%" height="39" barColor="#e0" alpha="1">
			<mx:HBox visible="true">
				<mx:Button label="新增" name="addbtn" id="addbtn_id" styleName="addNewbtn" click="newAction();"/>
				<mx:Button label="编辑" name="editbtn" id="editbtn_id" styleName="editbtn" click="editAction();"/>
				<mx:Button label="删除" name="delbtn" id="delbtn_id" styleName="delbtn" click="delAction();"/>
			</mx:HBox>
		</mx:ApplicationControlBar>
		<mx:Panel name="panelp" title="" styleName="label" width="100%" height="100%" horizontalAlign="center" paddingLeft="10">
			<mx:Box name="detailpanel"  height="100%" width="100%">
				
			</mx:Box>
		</mx:Panel>
	</mx:Box>
	
</mx:Box>
