<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="240" 
	title="我的焦点"
	styleName="label"
	close="PopUpManager.removePopUp(this);"
	creationComplete="init();"
	horizontalGap="1"
	>
	<mx:Style source="style/main.css"/>
	<mx:Script>
		<![CDATA[
			import com.google.maps.MapMouseEvent;
			import com.google.maps.InfoWindowOptions;
			import com.google.maps.Map;
			import com.google.maps.LatLng;
			import com.google.maps.overlays.Marker;
			import com.google.maps.overlays.MarkerOptions;
			import mx.events.ItemClickEvent;
			import view.selWin.ObjEditWindow;
			import system.CompanyUserSel;
			import view.selWin.ObjWindow;
			import shapan.marker.ObjectTitle;
			import com.ResultFilter;
			import component.ImageBrowse;
			import com.pioneer.http.UrlService;
			import mx.rpc.http.mxml.HTTPService;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.events.FaultEvent;
			import com.AppShareObj;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			
			private var map:Map=null;
			
			public function setMap(tmap:Map):void{
				this.map=tmap;
			}
			private function init():void{
				
				
				initPhysicalObj();
				initMarket();
				this.height=Application.application.screen.height;
				initFreshMenu();
				//initPhysicalObj();
			}
			//个人收藏初始化
			private function initMarket():void{
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="list";
				doc.@TABLE="我的标记";
				var userdoc:XML=AppShareObj.getUserDoc();
				doc.@CONDITION="create_id="+userdoc.@ID ;
				
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onXMLResult);
				tmplService.send(doc);
			}
			private function initFreshMenu():void{
				var ctmenu:ContextMenu = new ContextMenu();
				var freshmenu:ContextMenuItem = new ContextMenuItem('刷新');
				freshmenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	              titlep.removeAllChildren();
	             init();
	            });
				ctmenu.customItems.push(freshmenu);
				
				titlep.contextMenu=ctmenu;
			}
			//待阅信息初始化。
			private function tuijinit():void{
				myMarketInit();
				physicalObjInit();
			}
			//公开信息初始化
			private function openinit():void{
				openMarketInit();
				openPhysicalObjInit();
			}
			private function myMarketInit():void{
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="list";
				doc.@TABLE="我的标记";//地理对象存储
				var userdoc:XML=AppShareObj.getUserDoc();
				doc.@CONDITION=" id in (select PHYSICAL_OBJ from ctl_user_physical_obj where  user="+userdoc.@ID+" and type=0)" ;
				
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onTuijXMLResult);
				tmplService.send(doc);
			}
			private function openMarketInit():void{
				
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="list";
				doc.@TABLE="我的标记";//地理对象存储
				var userdoc:XML=AppShareObj.getUserDoc();
				doc.@CONDITION=" create_id!="+userdoc.@ID+"  and status='公开'" ;
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onOpenXMLResult);
				tmplService.send(doc);
			}
			private function physicalObjInit():void{
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="list";
				doc.@TABLE="地理对象存储";//地理对象存储
				var userdoc:XML=AppShareObj.getUserDoc();
				doc.@CONDITION=" id in (select PHYSICAL_OBJ from ctl_user_physical_obj where  user="+userdoc.@ID+" and type=1)" ;
				
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onTuijXMLResult);
				tmplService.send(doc);
			}
			private function openPhysicalObjInit():void{
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="list";
				doc.@TABLE="地理对象存储";//地理对象存储
				var userdoc:XML=AppShareObj.getUserDoc();
				doc.@CONDITION="create_id!="+userdoc.@ID+"  and status='公开'" ;
				
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onOpenXMLResult);
				tmplService.send(doc);
			}
			protected function onTuijXMLResult(e:ResultEvent):void{
				var menu:ContextMenu = new ContextMenu();
				var delmenu:ContextMenuItem = new ContextMenuItem('删除');
				var remarkMenu:ContextMenuItem= new ContextMenuItem('备注信息');
				//var fabu:ContextMenuItem= new ContextMenuItem('发布');
				//var fabu:ContextMenuItem= new ContextMenuItem('发布');
				delmenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	              
	             delTuijMarket();
	            });
	            remarkMenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	              
	             showRemark();
	            });
	            /**
	            fabu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	             fabuMark();
	            });
	            * **/
				menu.customItems.push(delmenu);
				//menu.customItems.push(fabu);
				menu.customItems.push(remarkMenu);
				try{
					var tmpdoc:XML=XML(e.result);
					var rows:XMLList=tmpdoc.TABLEDATA.ROWDATA.ROW;
					for each(var row:XML in rows){
						
						var name:String=row.@NAME;
						var path:String=row.@ICON;
						var img:ImageBrowse=new ImageBrowse();
						var status:String=row.@STATUS;
						img.row=row;
		            	img.setComp("ctl_biaoji");
		            	img.setLabel(name);
		            	img.setName(path);
		            	
		            	img.height=60;
		            	
		            	img.document=row;
		            	img.addEventListener(MouseEvent.CLICK,imgclick);
		            	img.addEventListener(MouseEvent.MOUSE_OVER,setCurrentImg);
		            	img.contextMenu=menu;
		            	tuijtitlep.addChild(img);
						
					}
					
					}catch(e:Error){}
			}
			protected function onOpenXMLResult(e:ResultEvent):void{
				
				var menu:ContextMenu = new ContextMenu();
				var remarkMenu:ContextMenuItem= new ContextMenuItem('备注信息');
	
	            remarkMenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	              
	             showRemark();
	            });

				//menu.customItems.push(delmenu);
				//menu.customItems.push(fabu);
				menu.customItems.push(remarkMenu);
				try{
					var tmpdoc:XML=XML(e.result);
					
					var rows:XMLList=tmpdoc.TABLEDATA.ROWDATA.ROW;
					for each(var row:XML in rows){
						
						var name:String=row.@NAME;
						
						var path:String=row.@ICON;
						var img:ImageBrowse=new ImageBrowse();
						img.row=row;
		            	img.setComp("ctl_biaoji");
		            	img.setLabel(name);
		            	img.setName(path);
		            	
		            	img.height=60;
		            	
		            	img.document=row;
		            	img.addEventListener(MouseEvent.CLICK,imgclick);
		            	img.addEventListener(MouseEvent.MOUSE_OVER,setCurrentImg);
		            	img.contextMenu=menu;
		            	opentitlep.addChild(img);
		            	
						
					}
					
					}catch(e:Error){
					Alert.show(e.getStackTrace());
					}
			}
			private function onFaultHttpService(e:FaultEvent):void
			{
				Alert.show("Unable to load datasource:"+e.message);
			}
			protected function onXMLResult(e:ResultEvent):void{
				var menu:ContextMenu = new ContextMenu();
				var delmenu:ContextMenuItem = new ContextMenuItem('删除');
				var remarkMenu:ContextMenuItem= new ContextMenuItem('备注信息');
				var fabu:ContextMenuItem= new ContextMenuItem('发布');
				//var fabu:ContextMenuItem= new ContextMenuItem('发布');
				delmenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	              
	             delMarket();
	            });
	            remarkMenu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	              
	             showRemark();
	            });
	            fabu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(e:ContextMenuEvent):void {
	             fabuMark();
	            });
				menu.customItems.push(delmenu);
				menu.customItems.push(fabu);
				menu.customItems.push(remarkMenu);
				try{
					var tmpdoc:XML=XML(e.result);
					var rows:XMLList=tmpdoc.TABLEDATA.ROWDATA.ROW;
					for each(var row:XML in rows){
						
						var name:String=row.@NAME;
						var path:String=row.@ICON;
						var img:ImageBrowse=new ImageBrowse();
						img.row=row;
		            	img.setComp("ctl_biaoji");
		            	img.setLabel(name);
		            	img.setName(path);
		            	
		            	img.height=60;
		            	
		            	img.document=row;
		            	img.addEventListener(MouseEvent.CLICK,imgclick);
		            	img.addEventListener(MouseEvent.MOUSE_OVER,setCurrentImg);
		            	img.contextMenu=menu;
						titlep.addChild(img);
					}
					
					}catch(e:Error){}
			}
			private function showRemark():void{
				var tdoc:XML=XML(this.currentImg.document);
				//Alert.show(tdoc.toXMLString());
				
				var id:String=tdoc.@ID;
				var createId:String=tdoc.@CREATE_ID;
				var userdoc:XML=AppShareObj.getUserDoc();
				var userId:String=userdoc.@ID;
				var physicalName:String=tdoc.@PHYSICAL_NAME;
				if(null==physicalName || ""==physicalName){
					physicalName="我的标记";
				}else{
					physicalName="地理对象存储";
				}
				
				if(createId!=userId){
					/**
					 	var selWin:ObjWindow =ObjWindow(PopUpManager.createPopUp(this, ObjWindow, true));
					//selWin.setComp("ctl_biaoji");
					var hiddenls:Array=new Array();
					hiddenls.push("X");
					hiddenls.push("Y");
					//hiddenls.push("IMGFILE");
					selWin.setHiddenLs(hiddenls);
					selWin.setCondition(physicalName,"ID="+id);
					
					selWin.showCloseButton=true;
					
					selWin.x=(Application.application.screen.width-selWin.width)/3;
	                selWin.y=(Application.application.screen.height-selWin.height)/3;
					 
					 **/
					 
					 
					
				}else{
					var editWin:ObjEditWindow =ObjEditWindow(PopUpManager.createPopUp(this, ObjEditWindow, true));
					//editWin.setComp("ctl_biaoji");
					editWin.setTblKey(physicalName,id);
					editWin.showCloseButton=true;
					
					editWin.x=(Application.application.screen.width-editWin.width)/2;
	                editWin.y=(Application.application.screen.height-editWin.height)/2;
				}
				
			}
			
			private function fabuMark():void{
				var tdoc:XML=XML(this.currentImg.document);
				var id:String=tdoc.@ID;
				var status:String=tdoc.@STATUS;
				var createId:String=tdoc.@CREATE_ID;
				var userdoc:XML=AppShareObj.getUserDoc();
				var userId:String=userdoc.@ID;
				if(createId!=userId){
					Alert.show("他人共享信息不可以发布！");
					return;
				}else if("公开"==status){
					Alert.show("信息已经公开！");
					return;
				}else if("保密"==status){
					Alert.show("保密信息不可以发布！");
					return;
				}
				var selWin:CompanyUserSel =CompanyUserSel(PopUpManager.createPopUp(this, CompanyUserSel, true));
				selWin.setParentObj(this);
				selWin.setMeta("分公司");
				var hiddenls:Array=new Array();
				
				selWin.showCloseButton=true;
				
				selWin.x=(Application.application.screen.width-selWin.width)/3;
                selWin.y=(Application.application.screen.height-selWin.height)/3;
			}
			
			public function processSel(users:Array):void{
				var tdoc:XML=XML(this.currentImg.document);
				
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="physicalObjFabu";
				doc.@TYPE="0";
				doc.@OBJ=tdoc.@ID;
				
				if(null==users){//physicalObjFabu
					
				}else{
					var usersElt:XML=<users/>
					for each(var user:Object in users){
						var elt:XML=<user/>;
						elt.@ID=user.ID;
						usersElt.appendChild(elt);
					}
					doc.appendChild(usersElt);
					var tmplService:HTTPService = new HTTPService();
					tmplService.url = UrlService.getShapanCDSURL();
					tmplService.contentType="application/xml";     
					tmplService.method="POST";
					tmplService.resultFormat = "e4x";
					tmplService.showBusyCursor=true;
					tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
					tmplService.addEventListener(ResultEvent.RESULT, onAddUsersResult);
					tmplService.send(doc);
				}
			}
			
			private function onAddUsersResult(e:ResultEvent):void{
			
			var data:XML=XML(e.result);
			if(!ResultFilter.filter(data))return;
			Alert.show("发布成功！");
			}
			private function imgclick(e:MouseEvent):void{
				var obj:Object=e.currentTarget; 
				var doc:XML=XML(obj.document);
				//Alert.show(doc.toXMLString());
				//地图上显示我的标签
				//展示信息测试；
				var imgfile:String=doc.@ICON;
				var markerOptions:MarkerOptions = new MarkerOptions(); 
				var iconPath=UrlService.getServiceUrl()+"upload/ctl_biaoji/"+imgfile;
				var request:URLRequest = new URLRequest(iconPath); 
				var imageLoader:Loader = new Loader(); 
				imageLoader.load(request)
				markerOptions.icon = imageLoader;
		        markerOptions.tooltip =doc.@NAME; 
		        markerOptions.iconAlignment = MarkerOptions.ALIGN_VERTICAL_CENTER+MarkerOptions.ALIGN_HORIZONTAL_CENTER; 
				var marker:Marker = new Marker(new LatLng(doc.@X,doc.@Y), markerOptions);
				map.setCenter(new LatLng(doc.@X,doc.@Y));
				if(null!=this.map){
					this.map.addOverlay(marker);
				}else{
					Alert.show("the map is null");
				}
				var win:MarketObjectWin=new MarketObjectWin();
				win.setMate(doc);
				Alert.show(doc.toXMLString());
				var options2:InfoWindowOptions = new InfoWindowOptions({
	                customContent: win,
	                customOffset: new Point(0, 10),
	                
	                drawDefaultFrame: true
	            });
	            
		        marker.addEventListener(MapMouseEvent.CLICK, function(e:Event):void {
	                marker.openInfoWindow(options2); 
	            });
	            marker.openInfoWindow(options2); 
				//var selWin:MarketObjectWin =MarketObjectWin(PopUpManager.createPopUp(this, MarketObjectWin, true));
				//selWin.setMate(doc);
				
			}
			private var currentImg:ImageBrowse=null;
			private function setCurrentImg(e:MouseEvent):void{
				var obj:ImageBrowse=ImageBrowse(e.currentTarget); 
				currentImg=obj;
				var doc:XML=XML(obj.document);
				//this.currentImg=doc;
			}
			
			private function delMarket():void{
				var tdoc:XML=XML(this.currentImg.document);
				
				
				//从数据库中删除标记数据机。
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="del";
				doc.@TABLE="我的标记";
				doc.@KEYNAME="ID";
				doc.@ID=tdoc.@ID;
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onDelResult);
				tmplService.send(doc);
			}
			protected function onDelResult(e:ResultEvent):void{
				var tmpdoc:XML=XML(e.result);
				if(!ResultFilter.filter(tmpdoc))return;
				delFabu();
				
			}
			private function delTuijMarket():void{
				var tdoc:XML=XML(this.currentImg.document);
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="physicalObjDel";
				
				doc.@OBJ=tdoc.@ID;
				var physicalId:String=tdoc.@PHYSICAL_ID;
				if(null==physicalId || ""==physicalId){
					doc.@TYPE="0";
				}else{
					doc.@TYPE="1";
				}
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getShapanCDSURL();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onTuijDelResult);
				tmplService.send(doc);
			}
			protected function onTuijDelResult(e:ResultEvent):void{
				var tmpdoc:XML=XML(e.result);
				if(!ResultFilter.filter(tmpdoc))return;
				tuijtitlep.removeChild(this.currentImg);
			}
			private function delFabu():void{
				var tdoc:XML=XML(this.currentImg.document);
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="physicalObjDel";
				doc.@TYPE="0";
				doc.@OBJ=tdoc.@ID;
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getShapanCDSURL();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onFabuDelResult);
				tmplService.send(doc);
				
			}
			protected function onFabuDelResult(e:ResultEvent):void{
				var tmpdoc:XML=XML(e.result);
				if(!ResultFilter.filter(tmpdoc))return;
				titlep.removeChild(this.currentImg);
			}
			
			private function initPhysicalObj():void{
				var doc:XML=<DATAPACKET/>;
				doc.@ACTION="list";
				doc.@TABLE="表注册";
				doc.@CONDITION="physical=1 and appcode='ctl' and CODE !='ctl_my_market'";
				
				var tmplService:HTTPService = new HTTPService();
				tmplService.url = UrlService.getDetailUrl();
				tmplService.contentType="application/xml";     
				tmplService.method="POST";
				tmplService.resultFormat = "e4x";
				tmplService.showBusyCursor=true;
				tmplService.addEventListener(FaultEvent.FAULT, onFaultHttpService);
				tmplService.addEventListener(ResultEvent.RESULT, onPhysicalObjResult);
				tmplService.send(doc);
				
			}
			protected function onPhysicalObjResult(e:ResultEvent):void{
				try{
					var tmpdoc:XML=XML(e.result);
					
					var rows:XMLList=tmpdoc.TABLEDATA.ROWDATA.ROW;
					for each(var row:XML in rows){
						var title:ObjectTitle=new ObjectTitle();
						title.setMap(this.map);
						title.label=row.@NAME;
						title.setMate(row.@NAME);
						title.setParentObj(accordionp);
						
						accordionp.addChild(title);
						
					}
				}catch(e:Error){
					
				}
			}
			private var tuijinitflg:Boolean=true;
			private var openinitflg:Boolean=true;
			private function stackClick(e:ItemClickEvent):void{
				
				var index=tabplace.selectedIndex;
				
				if(0==index){

				}else if(1==index){
					if(tuijinitflg){
						tuijinitflg=false;
						tuijinit();
					}
				}else if(2==index){
					
					if(openinitflg){
						openinitflg=false;
						this.openinit();
					}
				}
			}
		]]>
	</mx:Script>
	<mx:ApplicationControlBar width="100%">
		<mx:TabBar id="tabplace" itemClick="stackClick(event)" paddingLeft="1" paddingRight="1" left="1" selectedTabTextStyleName="selectedTab"  alpha="1" styleName="tabStyle" dataProvider="displaybar"/>
	</mx:ApplicationControlBar>
	<mx:Panel headerHeight="15" height="100%" width="100%">
		<mx:ViewStack height="100%" width="100%" id="displaybar" horizontalGap="1">
			<mx:Accordion  headerStyleName="accordionHead" label="收藏" id="accordionp" x="55" y="20" width="100%" height="100%" styleName="accordion">
				<mx:Tile id="titlep" label="我的标记" height="100%" width="100%" direction="horizontal" borderStyle="inset" horizontalGap="10" verticalGap="15" 
		             color="0x323232" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">
				</mx:Tile>
			</mx:Accordion>
			<mx:Accordion label="待阅" id="tuijaccordionp" x="55" y="20" width="100%" height="100%" styleName="accordion">
				<mx:Tile id="tuijtitlep"  height="100%" width="100%" direction="horizontal" borderStyle="inset" horizontalGap="10" verticalGap="15" 
		             color="0x323232" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">
				</mx:Tile>
			</mx:Accordion>
			<mx:Accordion label="开放信息" id="openccordionp" x="55" y="20" width="100%" height="100%" styleName="accordion">
				<mx:Tile id="opentitlep"  height="100%" width="100%" direction="horizontal" borderStyle="inset" horizontalGap="10" verticalGap="15" 
		             color="0x323232" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">
				</mx:Tile>
			</mx:Accordion>
		</mx:ViewStack>
	</mx:Panel>
	
	
</mx:TitleWindow>
